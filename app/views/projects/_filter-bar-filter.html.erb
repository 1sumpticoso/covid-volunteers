<div class="relative bg-white py-2 px-4 mx-2" x-data="dropdown<%= filter.camelize %>()" @click.away="open = false">
  <div class="flex text-sm items-center select-none" @click="open = !open">
    <div class="cursor-pointer"><span x-text="selectedCount()"></span> <%= label %></div>
    <%= inline_svg_pack_tag('media/svgs/chevron-right.svg', class: 'h-4 fill-current text-gray-600 transform rotate-90') %>
  </div>
  <div class="absolute left-0 mt-4 p-4 bg-white z-30 shadow-lg w-48 flex flex-col" x-show="open">
    <div class="overflow-auto max-h-400px">
      <template x-for="name in options" :key="name[1]">
        <div @click="toggleSelection(name[1])" class="flex mb-1 cursor-pointer">
          <input type="checkbox" x-bind:checked="isSelected(name[1])" class="mr-2 mt-1">
          <div x-text="name[0]"></div>
        </div>
      </template>
    </div>
    <div class="bg-white">
      <button class="button-indigo w-full mt-2" @click="applyFilters()">Apply filters</button>
      <button class="w-full mt-2" @click="resetFilters()">Reset filters</button>
    </div>
  </div>
</div>

<script>
  function dropdown<%= filter.camelize %>() {
    return {
      open: false,
      options: <%= options.to_json.html_safe %>,
      applyFilters() {
        const url = `/projects?<%= filter %>=${this.selected.map(param => encodeURIComponent(param)).join(',')}`
        console.log('applyFilters', (url))
        window.location.href = url
      },
      resetFilters() {
        this.selected = []
      },
      selectedCount(option) {
        return this.selected.length
      },
      toggleSelection(option) {
        if (this.selected.indexOf(option) >= 0) {
          this.selected = this.selected.filter(item => item !== option)
        } else {
          this.selected.push(option)
        }
      },
      isSelected(option) {
        return this.selected.some(selected => selected === option)
      },
      selected: <%= @applied_filters[filter.to_sym].present? ? @applied_filters[filter.to_sym].to_json.html_safe : [] %>,
    }
  }
</script>
